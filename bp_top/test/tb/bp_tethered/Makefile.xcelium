$(BUILD_DIR)/testbench.sv:
	@sed "s/BP_CFG_FLOWVAR/$(CFG)/g" $(TB_PATH)/$(TB)/$(@F) > $@
	@sed -i 's/BP_DRAM_FLOWVAR/"$(DRAM)"/g' $@

$(BUILD_DIR)/wrapper.sv:
	sed "s/BP_CFG_FLOWVAR/$(CFG)/g" $(TB_PATH)/$(TB)/$(@F) > $@;
	sed -i 's/BP_DRAM_FLOWVAR/"$(DRAM)"/g' $@;

$(BUILD_DIR)/bsg_tag_boot_rom.v: $(TB_PATH)/$(TB)/bsg_tag_boot.tr
	@python $(BASEJUMP_STL_DIR)/bsg_mem/bsg_ascii_to_rom.py $< bsg_tag_boot_rom > $@

$(BUILD_DIR)/flist.vcs:
	@grep -v -e "^\#" $(SYN_PATH)/flist.vcs          > $@
	@grep -v -e "^\#" $(TB_PATH)/$(TB)/flist.vcs    >> $@
	@sed -i "/bp_nonsynth_core_profiler.sv/d"          $@
	@sed -i "/bp_nonsynth_pc_profiler.sv/d"            $@
	@sed -i "/bp_nonsynth_branch_profiler.sv/d"        $@
	@echo wrapper.sv                                >> $@
	@echo testbench.sv                              >> $@
	@echo bsg_tag_boot_rom.v                        >> $@
	@echo "$(BP_ME_DIR)/test/common/bp_ddr.sv"      >> $@
	@echo "$(BASEJUMP_STL_DIR)/bsg_test/bsg_nonsynth_reset_gen.v" >> $@
	@echo "$(BASEJUMP_STL_DIR)/bsg_test/bsg_nonsynth_clock_gen.v" >> $@
	@echo "$(BASEJUMP_STL_DIR)/bsg_clk_gen/bsg_dly_line.v"        >> $@
	@echo "$(BASEJUMP_STL_DIR)/bsg_dmc/bsg_dmc_clk_rst_gen.v"     >> $@
	@echo "$(BASEJUMP_STL_DIR)/testing/bsg_dmc/lpddr_verilog_model/mobile_ddr.v" >> $@

BUILD_COLLATERAL = $(addprefix $(BUILD_DIR)/, flist.vcs wrapper.sv testbench.sv bsg_tag_boot_rom.v)

$(SIM_DIR)/xcelium.d: $(BUILD_DIR)/xcelium.d
	@ln -nsf $(<D)/$(@F) $@

$(SIM_DIR)/prog.riscv: $(BP_SDK_PROG_DIR)/$(SUITE)/$(PROG).riscv
	cp $^ $@

$(SIM_DIR)/prog.elf: $(SIM_DIR)/prog.riscv
	cp $^ $@

ifeq ($(UCODE), 1)
CCE_UCODE_FILE ?= $(BP_SDK_UCODE_DIR)/$(CCE_MEM)
else
CCE_UCODE_FILE ?=
endif

$(SIM_DIR)/cce_ucode.mem: $(CCE_UCODE_FILE)
ifeq ($(UCODE), 1)
	cp $< $@
endif

NBF_INPUTS ?= --ncpus=$(NCPUS)
ifeq ($(UCODE), 1)
NBF_INPUTS += --config --ucode=cce_ucode.mem
else ifeq ($(NBF_CONFIG_P), 1)
NBF_INPUTS += --config
endif
ifeq ($(PRELOAD_MEM_P), 0)
NBF_INPUTS += --mem=prog.mem --skip_zeros
endif
NBF_INPUTS += --addr_width=$(PADDR_WIDTH)
NBF_INPUTS += --debug

$(SIM_DIR)/prog.nbf: $(SIM_DIR)/cce_ucode.mem $(SIM_DIR)/prog.mem
	cd $(@D); python $(MEM2NBF) $(NBF_INPUTS) > $@

$(SIM_DIR)/bootrom.riscv: $(BP_SDK_PROG_DIR)/bootrom/bootrom.riscv
	cp $< $@

$(SIM_DIR)/bootrom.mem: $(SIM_DIR)/bootrom.riscv
	$(RISCV_OBJCOPY) -O verilog --verilog-data-width=8 $< $@
	$(SED) -i "s/@0011/@0000/g" $@

SIM_COLLATERAL  = $(addprefix $(SIM_DIR)/, xcelium.d)
SIM_COLLATERAL += $(addprefix $(SIM_DIR)/, prog.riscv prog.elf prog.mem prog.nbf prog.dump)
SIM_COLLATERAL += $(addprefix $(SIM_DIR)/, bootrom.riscv bootrom.mem bootrom.dump)

